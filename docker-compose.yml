version: '3.8'

services:
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./webapp:/var/www/html
    networks:
      - app-network
    deploy:
      replicas: 2  # Definindo 2 réplicas para o serviço webapp
      placement:
        constraints: [node.role == worker]

  websocket:
    build:
      context: ./websocket
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app-network
    deploy:
      replicas: 3  # Definindo 3 réplicas para o serviço websocket
      placement:
        constraints: [node.role == worker]

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: my_database
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    deploy:
      replicas: 1  # Apenas uma instância do banco de dados é geralmente suficiente
      placement:
        constraints: [node.role == worker]

  visualizer:
    image: dockersamples/visualizer:latest
    ports:
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    deploy:
      replicas: 1  # Apenas uma instância do visualizer é necessária
      placement:
        constraints: [node.role == manager]

networks:
  app-network:
    driver: bridge

volumes:
  db_data: